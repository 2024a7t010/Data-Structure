#include<stdio.h>
#include<stdlib.h>
#define size 100
typedef struct priorityqueue{
    int element;
    int priority;
}priorityqueue;
priorityqueue pq[size];
int front=-1,count=-1;
int isempty(){
    return (front==-1)?1:0;
}

int  isfull(){
    return (count==size-1)?1:0;
}

void enqueue(int data,int priority){
    if(isempty()){
        count=count+1;
        pq[count].element=data;
        pq[count].priority=priority;
        front = count;
    }
    else{
    int i;
    for(i=0;i<=count;i++){
        if(pq[i].priority<priority){
            for(int j=count;j>=i;j--){
                pq[j+1].element=pq[j].element;
                pq[j+1].priority=pq[j].priority;
            }
            pq[i].element=data;
            pq[i].priority=priority;
            count++;
            break;
        }
    }
    if(i==count+1){
        
        pq[i].element=data;
        pq[i].priority=priority;
        count++;
    }
}
    printf("Element Inserted!!!!\n");
}
int dequeue(){
    int data=pq[front].element;
    if(front==count){
        front=-1;
        count=-1;
    }
    else{
        front++;
        
    }
    return data;
}
int peek(){
    return pq[front].element;
}
int display(){
    for(int i=front;i<=count;i++){
        printf("%d %d\n",pq[i].element,pq[i].priority);
    }
}
int main(){
    while(1){
        printf("-----Priority Queue-----\n");
        printf("1. Enqueue\n");
        printf("2. Dequeue\n");
        printf("3. Peek\n");
        printf("4. Display\n");
        printf("5. Exit\n");
        int choice,data,p;
        printf("Enter Choice : ");
        scanf("%d",&choice);
        switch(choice){
            case 1 :
                if(isfull()){
                    printf("Queue Overflow !!!!\n");
                }
                else{
                    printf("Element Element : ");
                    scanf("%d %d",&data,&p);
                    enqueue(data,p);
                }
                break;
            case 2 :
                if(isempty()){
                    printf("Queue Underflow !!!!\n");
                }
                else{
                    printf("%d is dequeue from the queue\n",dequeue());
                }
                break;
            case 3 :
                printf("Element available in front of queue is %d\n",peek());
                break;
            case 4 :
                if(isempty()){
                    printf("Queue is empty");
                }
                else{
                    display();
                }
                break;
            case 5 :
                exit(0);
            default : 
                printf("Invalid Choice !!!!\n");
        }
        printf("\n");
    }
    return 0;
}
